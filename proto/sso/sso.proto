syntax = "proto3";
package sso;

option go_package = "github.com/anon-d/proto/sso;sso";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service Auth {
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc Logout(LogoutRequest) returns (google.protobuf.Empty);
    rpc AccessToken(TokenRequest) returns (TokenResponse);
    rpc Validate(ValidateRequest) returns (ValidateResponse);
}

service Directory {
    rpc GetUser(GetUserRequest) returns (GetUserResponse);
    rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty);
    rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
}

service Permission {
    rpc CreatePermission(CreatePermissionRequest) returns (google.protobuf.Empty);
    rpc GetInfoForPermissions(google.protobuf.Empty) returns (ReadPermissionResponse);
    rpc UpdatePermission(UpdatePermissionRequest) returns (google.protobuf.Empty);
    rpc DeletePermission(DeletePermissionRequest) returns (google.protobuf.Empty);
    rpc AssignPermissionToUser(AssignPermissionRequest) returns (google.protobuf.Empty);
    rpc RemovePermissionFromUser(RemovePermissionRequest) returns (google.protobuf.Empty);
}

// ---- AUTH MESSAGE ----
message RegisterRequest {
    string email = 1;
    string password = 2;
    string name = 3;
}
message RegisterResponse {
    bytes user_id = 1;
}

message LoginRequest {
    string email = 1;
    string password = 2;
    int32 app_id = 3;
}
message LoginResponse {
    string accessToken = 1;
    string refreshToken = 2;
}

message LogoutRequest {
    string refreshToken = 1;
}

message TokenRequest {
    string refreshToken = 1;
    int32 app_id = 2;
}
message TokenResponse {
    string accessToken = 1;
}

message ValidateRequest {
    string accessToken = 1;
}

message ValidateResponse {
    bool valid = 1;
}

// ---- DIRECTORY MESSAGE ----
message GetUserRequest {
    string accessToken = 1;
}

message GetUserResponse {
    User user = 1;
}

message UpdateUserRequest {
    string accessToken = 1;
    string oldPassword = 2;
    string newPassword = 3;
}

message DeleteUserRequest {
    string accessToken = 1;
}

// ---- PERMISSION MESSAGE ----
message CreatePermissionRequest {
    string description = 1;
}

message ReadPermissionResponse {
    repeated Privilege privileges = 1;
}

message UpdatePermissionRequest {
    int64 privilege_id = 1;
    string name = 2;
}

message DeletePermissionRequest {
    int64 privilege_id = 1;
}

message AssignPermissionRequest {
    bytes user_id = 1;
    int64 privilege_id = 2;
}

message RemovePermissionRequest {
    bytes user_id = 1;
    int64 privilege_id = 2;
}

// ---- IDs (executing users permissions) ----
message UserPermissions {
    bytes user_id = 1;
    repeated int64 privilege_id = 2;
}

// ---- USER MESSAGE STRUCT ----
message User {
    bytes user_id = 1;
    string email = 2;
    string name = 3;
    repeated Group groups = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp last_login_at = 6;
    bool is_active = 7;
}

// ---- APP MESSAGE STRUCT ----
message App {
    bytes app_id = 1;
    string name = 2;
    repeated Privilege privileges = 3;
}

// ---- GROUP MESSAGE STRUCT ----
message Group {
    bytes group_id = 1;
    string name = 2;
}

message GroupPrivilege {
    Group group = 1;
    int32 privilege = 2;
}

message Privilege {
    repeated GroupPrivilege privileges = 1;
}
